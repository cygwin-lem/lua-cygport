################################
NAME="lua53"
VERSION=5.3.6
RELEASE=1
CATEGORY="Lua Interpreters"
SUMMARY="Lua programming language interpreter"
DESCRIPTION="\
Lua is a powerful, efficient, lightweight, embeddable scripting language.
It supports procedural programming, object-oriented programming,
functional programming, data-driven programming, and data description.
"
HOMEPAGE="https://www.lua.org/"
SRC_URI="https://www.lua.org/ftp/lua-${VERSION}.tar.gz"
SRC_DIR="lua-${VERSION}"
PATCH_URI="
  5.3.6-bugs-5.4.2-2.patch
  5.3.6-bugs-5.4.2-3.patch
  5.3.6-Makefile.patch
  5.3.6-luaconf_h.patch
"

BUILD_REQUIRES="\
  libreadline-devel\
"

################################
LUA_VERSION=${VERSION%.*}
LUA_VERSIONS=${LUA_VERSION}
source lua.experiment

################################
ABI=0


################################
_CYGPORT_RESTRICT_postinst_doc_=1

__add_pkg "lua${LUA_CYG_V[${LUA_VERSION}]}"
__set_pkg_property . CONTENTS  "\
  usr/bin/ \
  usr/*/lua/ \
  usr/share/doc/lua${LUA_CYG_V[${LUA_VERSION}]}*
  usr/share/man/*/lua*${LUA_VERSION}* \
  etc/postinstall/lua${LUA_CYG_V[${LUA_VERSION}]}.sh \
  etc/preremove/lua${LUA_CYG_V[${LUA_VERSION}]}.sh \
"
case ${LUA_VERSION} in
5.1)  __set_pkg_property . OBSOLETES "lua${LUA_VERSION}" ;;
5.3)  __set_pkg_property . OBSOLETES "liblua${LUA_VERSION}" ;;
5.4)  __set_pkg_property . OBSOLETES "liblua${LUA_VERSION}" ;;
esac

__add_pkg "lua${LUA_CYG_V[${LUA_VERSION}]}-devel"
__set_pkg_property . SUMMARY   "${SUMMARY} (devel)"
__set_pkg_property . CONTENTS  "\
  usr/include/ \
  usr/lib/liblua*.dll.a \
  usr/lib/pkgconfig/ \
  etc/postinstall/lua${LUA_CYG_V[${LUA_VERSION}]}-devel.sh \
  etc/preremove/lua${LUA_CYG_V[${LUA_VERSION}]}-devel.sh \
"
case ${LUA_VERSION} in
5.1)  __set_pkg_property . OBSOLETES "lua${LUA_VERSION}-devel" ;;
esac

################################
__set_LUA_MAKE_ARGS() {
  LUA_MAKE_ARGS=(
    EXEC_SUFFIX=.exe \
    CC=${CC} \
    AR="${CC} -shared -Wl,--out-implib,liblua${LUA_VERSION}.dll.a -o" \
    RANLIB=: \
    LUA_A="cyglua-${LUA_VERSION}.dll" \
    LUA_T="lua${LUA_VERSION}" \
    LUAC_T="luac${LUA_VERSION}" \
    CFLAGS="${CFLAGS}" \
    LIBS="-lreadline -lhistory"
    TO_BIN="cyglua-${LUA_VERSION}.dll lua${LUA_VERSION}.exe luac${LUA_VERSION}.exe" \
    TO_LIB="liblua${LUA_VERSION}.dll.a" \
    INSTALL_TOP=${D}/usr \
    INSTALL_BIN=${D}/usr/bin
    INSTALL_INC=${D}/usr/include/lua${LUA_VERSION} \
    INSTALL_LIB=${D}/usr/lib \
    INSTALL_MAN=${D}/usr/share/man/man1 \
    INSTALL_LMOD=${D}/usr/share/lua/${LUA_VERSION} \
    INSTALL_CMOD=${D}/usr/lib/lua/${LUA_VERSION} \
    INSTALL_EXEC="install -m755" \
    INSTALL_DATA="install -m644" \
  )
}

################################
src_compile() {
	__set_LUA_MAKE_ARGS
	lndirs
	cd ${B}/src
	cygmake all "${LUA_MAKE_ARGS[@]}"
}

################################
src_install() {
	__set_LUA_MAKE_ARGS
	cd ${B}
	cyginstall "${LUA_MAKE_ARGS[@]}"

	keepdir /usr/{lib,share}/lua/${LUA_VERSION}
	keepdir /usr/share/lua/luarocks/{lib,share}/lua/${LUA_VERSION}

	dodir /usr/lib/pkgconfig
	cat > ${D}/usr/lib/pkgconfig/lua${LUA_VERSION}.pc <<_EOF
V=${LUA_VERSION}
R=${VERSION}

prefix=/usr
exec_prefix=\${prefix}
libdir=\${exec_prefix}/lib
includedir=\${prefix}/include

INSTALL_BIN=\${prefix}/bin
INSTALL_INC=\${prefix}/include/lua\${V}
INSTALL_LIB=\${prefix}/lib
INSTALL_MAN=\${prefix}/share/man/man1
INSTALL_LMOD=\${prefix}/share/lua/\${V}
INSTALL_CMOD=\${prefix}/lib/lua/\${V}

Name: Lua
Description: An Extensible Extension Language
Version: \${R}
Requires:
Libs: -L\${INSTALL_LIB} -llua\${V}
Cflags: -I\${INSTALL_INC}
_EOF

  dosym ./lua${LUA_VERSION}.pc /usr/lib/pkgconfig/lua-${LUA_VERSION}.pc
  dosym ./liblua${LUA_VERSION}.dll.a /usr/lib/liblua-${LUA_VERSION}.dll.a

  docinto /lua${LUA_CYG_V[${LUA_VERSION}]}/html
  dodoc ${S}/doc/*.{css,gif,html}
  docinto /lua${LUA_CYG_V[${LUA_VERSION}]}
  dodoc ${S}/README*

  # postinstall/preremove scripts setting alternatives
  local POSTINSTALL=./postinstall/lua${LUA_CYG_V[${LUA_VERSION}]}.sh
  local PREREMOVE=./preremove/lua${LUA_CYG_V[${LUA_VERSION}]}.sh
  local POSTINSTALL_DEV=./postinstall/lua${LUA_CYG_V[${LUA_VERSION}]}-devel.sh
  local PREREMOVE_DEV=./preremove/lua${LUA_CYG_V[${LUA_VERSION}]}-devel.sh

  mkdir -p ./postinstall
  mkdir -p ./preremove

  __script_postinstall_lua ${LUA_VERSION} <<_EOF > ${POSTINSTALL}
LUA_VERSION=${LUA_VERSION}
LUA_VERSION_NUM=${LUA_NUM_V[${LUA_VERSION}]}
/usr/sbin/alternatives \\
--install /usr/bin/lua lua /usr/bin/lua\${LUA_VERSION} \${LUA_VERSION_NUM} \\
--slave /usr/bin/luac luac /usr/bin/luac\${LUA_VERSION} \\
--slave /usr/share/man/man1/lua.1.gz lua.1.gz /usr/share/man/man1/lua\${LUA_VERSION}.1.gz \\
--slave /usr/share/man/man1/luac.1.gz luac.1.gz /usr/share/man/man1/luac\${LUA_VERSION}.1.gz \\
_EOF

  __script_preremove_lua ${LUA_VERSION} > ${PREREMOVE}

  __script_postinstall_lua ${LUA_VERSION} devel <<_EOF > ${POSTINSTALL_DEV}
--slave /usr/lib/liblua.dll.a liblua.dll.a /usr/lib/liblua\${LUA_VERSION}.dll.a \\
--slave /usr/lib/pkgconfig/lua.pc lua.pc /usr/lib/pkgconfig/lua\${LUA_VERSION}.pc \\
_EOF

  __script_preremove_lua ${LUA_VERSION} devel > ${PREREMOVE_DEV}

  insinto /etc/postinstall
  doins ${POSTINSTALL}
  doins ${POSTINSTALL_DEV}
  insinto /etc/preremove
  doins ${PREREMOVE}
  doins ${PREREMOVE_DEV}
}

################################
src_test() {
  __set_LUA_MAKE_ARGS
  cd ${B}
  cygmake test "${LUA_MAKE_ARGS[@]}"
}

################################
